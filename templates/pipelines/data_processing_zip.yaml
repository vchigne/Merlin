id: template_data_processing_zip
name: "Procesamiento y Compresión de Datos"
description: "Plantilla para procesar archivos de datos y comprimir los resultados"
type: compression
tags:
  - command
  - zip
  - data-processing
  - file-handling
created_at: "2025-05-15T12:00:00Z"
updated_at: "2025-05-15T12:00:00Z"
units:
  - id: unit_process_files
    type: command
    comment: "Procesa los archivos de datos"
    position:
      x: 100
      y: 200
    command:
      name: "Procesar archivos de datos"
      target: "python"
      working_directory: "${WORKING_DIR}"
      args: "process_data.py --source=${SOURCE_DIR} --target=${TARGET_DIR}"
      script: |
        # Este script es un placeholder para el procesamiento de datos
        import os, sys, argparse
        parser = argparse.ArgumentParser()
        parser.add_argument('--source', required=True)
        parser.add_argument('--target', required=True)
        args = parser.parse_args()
        
        # Procesar archivos
        print(f"Procesando archivos desde {args.source} hacia {args.target}")
        # Implementación del procesamiento aquí
        
        # Fin del procesamiento
        print("Procesamiento completado con éxito")
      return_output: true
    retry:
      count: 2
      after_milliseconds: 5000
    timeout:
      milliseconds: 300000
      abort_on_timeout: true
    error_handling:
      continue_on_error: false
    next_unit_id: unit_compress_results
    
  - id: unit_compress_results
    type: zip
    comment: "Comprime los archivos resultantes"
    position:
      x: 350
      y: 200
    zip:
      name: "Comprimir resultados"
      output: "${OUTPUT_ZIP_FILE}"
      return_output: true
    retry:
      count: 1
      after_milliseconds: 3000
    timeout:
      milliseconds: 60000
      abort_on_timeout: false
    error_handling:
      continue_on_error: false
    next_unit_id: unit_log_completion
    
  - id: unit_log_completion
    type: command
    comment: "Registra la finalización del proceso"
    position:
      x: 600
      y: 200
    command:
      name: "Registrar finalización"
      target: "cmd.exe"
      working_directory: "${WORKING_DIR}"
      args: "/c echo Procesamiento completado: %date% %time% > ${LOG_FILE}"
      return_output: true
    retry:
      count: 1
      after_milliseconds: 1000
    timeout:
      milliseconds: 5000
      abort_on_timeout: false
    error_handling:
      continue_on_error: true